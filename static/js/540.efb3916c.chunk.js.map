{"version":3,"file":"static/js/540.efb3916c.chunk.js","mappings":"iQAMMA,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAGhBE,EAAmB,CACvBC,SAAU,0BACVC,MAAO,CACLC,MAAO,wBACPC,OAAQ,0BAEVA,OAAQ,CACNC,MAAO,sCAIXC,OAAOC,OAAS,SAACC,EAAKC,GAAS,OAC7BH,OAAOI,KAAKF,GACTD,QAAO,SAAAI,GAAG,OAAIF,EAAUD,EAAIG,GAAK,IACjCC,QAAO,SAACC,EAAKF,GAAG,OAAME,EAAIF,GAAOH,EAAIG,GAAME,CAAG,GAAG,CAAC,EAAG,EAiE1D,UA/DoB,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QAEfC,EAAQ,yCAAG,WAAOC,GAAI,gFAYvB,OAXCC,EAAOX,OAAOC,OAAOS,GAAM,SAAAE,GAAI,YAAaC,IAATD,CAAkB,IACnDE,EAAMC,aAAaC,QAAQ,OAAM,SAE/BC,EAAU,CACdC,IAAKC,EAAAA,GAAe,aACpBC,OAAQ,OACRT,KAAAA,EACAU,QAAS,CACP,eAAgB,mBAChB,YAAaP,IAEhB,SACKQ,IAAAA,QAAcL,GAAQ,OAC5BM,EAAAA,GAAAA,QAAgB,CAAEC,QAAS,6BAC3BhB,EAAQiB,KAAKC,EAAAA,GAAkB,cAAa,kDAE5CC,QAAQC,MAAM,EAAD,IAAQ,0DAExB,gBAnBa,sCAqBd,OACE,gBAAC,IAAI,KACH,gBAAC,IAAI,iBAAKtC,EAAM,CAAEuC,KAAK,eAAepB,SAAUA,EAAUf,iBAAkBA,IAC1E,gBAAC,SAAS,CAACmC,KAAM,CAAC,gBAAiBC,MAAM,eAAeC,MAAO,CAAC,CAAEpC,UAAU,KAC1E,gBAAC,IAAK,OAER,gBAAC,SAAS,CAACkC,KAAM,CAAC,QAASC,MAAM,YAC/B,gBAAC,IAAK,OAER,gBAAC,SAAS,CAACD,KAAM,CAAC,SAAUC,MAAM,SAASC,MAAO,CAAC,CAAEC,KAAM,WACzD,gBAAC,IAAK,OAER,gBAAC,SAAS,CAACH,KAAM,CAAC,SAAUC,MAAM,YAChC,gBAAC,IAAW,CAACG,MAAO,CAAEC,MAAO,YAE/B,gBAAC,SAAS,CAACL,KAAM,CAAC,cAAeC,MAAM,iBACrC,gBAAC,IAAK,OAER,gBAAC,SAAS,CAACD,KAAM,CAAC,QAASC,MAAM,YAC/B,gBAAC,IAAK,OAER,gBAAC,SAAS,CAACD,KAAM,CAAC,WAAYC,MAAM,UAClC,gBAAC,IAAK,OAER,gBAAC,SAAS,CAACD,KAAM,CAAC,OAAQC,MAAM,OAC9B,gBAAC,IAAK,CAACG,MAAO,CAAEC,MAAO,YAEzB,gBAAC,SAAS,CAACzC,YAAU,kBAAOH,EAAOG,YAAU,IAAE0C,OAAQ,KACrD,gBAAC,IAAM,CAACH,KAAK,UAAUI,SAAS,UAAQ,SAGxC,gBAAC,IAAM,CAACJ,KAAK,QAAQK,QAAS,kBAAM7B,EAAQiB,KAAKC,EAAAA,GAAkB,aAAa,EAAEO,MAAO,CAAEK,WAAY,SAAS,YAO1H,C","sources":["views/app-views/customers/addCustomer/index.js"],"sourcesContent":["import React from 'react'\nimport { Form, Input, InputNumber, Button, Card, message } from 'antd';\nimport { APP_PREFIX_PATH, API_BASE_URL } from 'configs/AppConfig'\nimport axios from 'axios'\n\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 14 },\n};\n\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!',\n  },\n  number: {// eslint-disable-next-line\n    range: 'Must be between ${min} and ${max}',\n  },\n};\n\nObject.filter = (obj, predicate) =>\n  Object.keys(obj)\n    .filter(key => predicate(obj[key]))// eslint-disable-next-line\n    .reduce((res, key) => (res[key] = obj[key], res), {});\n\nconst AddCustomer = ({ history }) => {\n\n  const onFinish = async (form) => {\n    let data = Object.filter(form, item => item !== undefined)\n    const jwt = localStorage.getItem('jwt')\n    try {\n      const options = {\n        url: API_BASE_URL + '/customer/',\n        method: 'POST',\n        data,\n        headers: {\n          'Content-Type': 'application/json',\n          'jwt-token': jwt\n        }\n      }\n      await axios.request(options)\n      message.success({ content: 'Cliente creado con exito' })\n      history.push(APP_PREFIX_PATH + '/customers')\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <Card>\n      <Form {...layout} name=\"add-customer\" onFinish={onFinish} validateMessages={validateMessages}>\n        <Form.Item name={['businessName']} label=\"Razon social\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name={['name']} label=\"Contacto\" >\n          <Input />\n        </Form.Item>\n        <Form.Item name={['email']} label=\"Correo\" rules={[{ type: 'email' }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name={['phone']} label=\"Telefono\" >\n          <InputNumber style={{ width: '200px' }} />\n        </Form.Item>\n        <Form.Item name={['webAddress']} label=\"Direccion web\" >\n          <Input />\n        </Form.Item>\n        <Form.Item name={['logo']} label=\"URL Logo\" >\n          <Input />\n        </Form.Item>\n        <Form.Item name={['address']} label=\"Ciudad\" >\n          <Input />\n        </Form.Item>\n        <Form.Item name={['nit']} label=\"NIT\" >\n          <Input style={{ width: '200px' }} />\n        </Form.Item>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Crear\n          </Button>\n          <Button type=\"ghost\" onClick={() => history.push(APP_PREFIX_PATH + '/customers')} style={{ marginLeft: '15px' }}>\n            Volver\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  )\n}\n\nexport default AddCustomer\n"],"names":["layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","Object","filter","obj","predicate","keys","key","reduce","res","history","onFinish","form","data","item","undefined","jwt","localStorage","getItem","options","url","API_BASE_URL","method","headers","axios","message","content","push","APP_PREFIX_PATH","console","error","name","label","rules","type","style","width","offset","htmlType","onClick","marginLeft"],"sourceRoot":""}