{"version":3,"file":"static/js/347.d2d687b3.chunk.js","mappings":"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","sources":["views/auth-views/authentication/reset-password/index.js","../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Card, Row, Col, Form, Input, Button, message } from \"antd\";\nimport { LockOutlined } from '@ant-design/icons';\nimport axios from 'axios'\nimport { API_BASE_URL, AUTH_PREFIX_PATH } from 'configs/AppConfig'\n\nconst backgroundStyle = {\n  backgroundImage: 'url(/img/others/img-17.jpg)',\n  backgroundRepeat: 'no-repeat',\n  backgroundSize: 'cover'\n}\n\nconst ForgotPassword = ({ history, match }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(true);\n\n  const token = match.params.token\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const options = {\n          url: API_BASE_URL + '/auth/checkresetpasswordtoken',\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'reset-password-token': token\n          }\n        }\n        const res = (await axios.request(options)).data\n        if (res) {\n          setLoading(false)\n        } else {\n          history.push(AUTH_PREFIX_PATH + '/login')\n          message.error(\"This URL has expired\")\n        }\n      } catch (error) {\n        console.log(error);\n        history.push(AUTH_PREFIX_PATH + '/login')\n        message.error(\"This URL has expired\")\n      }\n    }\n    init()// eslint-disable-next-line\n  }, []);\n\n\n  const onSend = async (values) => {\n    setLoading(true)\n    try {\n      const options = {\n        url: API_BASE_URL + '/auth/resetpassword2/',\n        method: 'POST',\n        data: { password: values.password },\n        headers: {\n          'Content-Type': 'application/json',\n          'reset-password-token': token\n        }\n      }\n      await axios.request(options)\n      message.success('Password changed successfully');\n      history.push(AUTH_PREFIX_PATH + '/login')\n    } catch (error) {\n      console.log(error);\n      message.error(error.response.data.message)\n    }\n    setLoading(false)\n  };\n\n  return (\n    <div className=\"h-100\" style={backgroundStyle}>\n      <div className=\"container d-flex flex-column justify-content-center h-100\">\n        <Row justify=\"center\">\n          <Col xs={20} sm={20} md={20} lg={9}>\n            <Card>\n              <div className=\"my-2\">\n                <div className=\"text-center\">\n                  <img className=\"img-fluid\" src=\"/img/logo.png\" alt=\"\" />\n                  <h3 className=\"mt-3 font-weight-bold\">Reset Password</h3>\n                  <p className=\"mb-4\">Enter your new password</p>\n                </div>\n                <Row justify=\"center\">\n                  <Col xs={24} sm={24} md={20} lg={20}>\n                    <Form form={form} layout=\"vertical\" name=\"reset-password\" onFinish={onSend}>\n                      <Form.Item\n                        name={[\"password\"]}\n                        label=\"New Password\"\n                        rules={[{\n                          required: true,\n                          message: 'Please input your new password'\n                        }]}\n                        hasFeedback\n                      >\n                        <Input.Password prefix={<LockOutlined className=\"text-primary\" />} />\n                      </Form.Item>\n                      <Form.Item\n                        name={[\"confirm\"]}\n                        label=\"ConfirmPassword\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Please confirm your password!'\n                          },\n                          ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                              if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                              }\n                              return Promise.reject('Passwords do not match!');\n                            },\n                          })\n                        ]}\n                        hasFeedback\n                      >\n                        <Input.Password prefix={<LockOutlined className=\"text-primary\" />} />\n                      </Form.Item>\n                      <Form.Item>\n                        <Button loading={loading} type=\"primary\" htmlType=\"submit\" block>{loading ? 'Sending' : 'Send'}</Button>\n                      </Form.Item>\n                    </Form>\n                  </Col>\n                </Row>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default ForgotPassword\n\n","// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\nLockOutlined.displayName = 'LockOutlined';\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);"],"names":["backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","history","match","Form","form","useState","loading","setLoading","token","params","useEffect","init","options","url","API_BASE_URL","method","headers","axios","data","push","AUTH_PREFIX_PATH","message","console","log","onSend","values","password","response","className","style","justify","xs","sm","md","lg","src","alt","layout","name","onFinish","label","rules","required","hasFeedback","prefix","getFieldValue","validator","rule","value","Promise","reject","resolve","type","htmlType","block","LockOutlined","props","ref","React","AntdIcon","_objectSpread","icon","LockOutlinedSvg","displayName"],"sourceRoot":""}