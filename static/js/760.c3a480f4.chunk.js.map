{"version":3,"file":"static/js/760.c3a480f4.chunk.js","mappings":"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","sources":["views/app-views/customers/editCustomer/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Form, Input, InputNumber, Button, Card, message } from 'antd';\nimport { APP_PREFIX_PATH, API_BASE_URL } from 'configs/AppConfig'\nimport axios from 'axios'\nimport Loading from 'components/shared-components/Loading'\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 14 },\n};\n\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!',\n  },\n  number: {// eslint-disable-next-line\n    range: 'Must be between ${min} and ${max}',\n  },\n};\n\nObject.filter = (obj, predicate) =>\n  Object.keys(obj)\n    .filter(key => predicate(obj[key]))// eslint-disable-next-line\n    .reduce((res, key) => (res[key] = obj[key], res), {});\n\nconst EditCustomer = ({ history, match }) => {\n  const [customer, setCustomer] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const customerId = match.params.customerid\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const jwt = localStorage.getItem('jwt')\n        const options = {\n          url: API_BASE_URL + '/customer/' + customerId,\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'jwt-token': jwt\n          }\n        }\n        let res = await axios.request(options)\n        setCustomer(res.data)\n        setLoading(false)\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    init()\n  }, [customerId])\n\n\n  const onFinish = async (form) => {\n    setLoading(true)\n    let data = Object.filter(form, item => item !== undefined)\n    data._id = customerId\n    const jwt = localStorage.getItem('jwt')\n    try {\n      const options = {\n        url: API_BASE_URL + '/customer/',\n        method: 'PUT',\n        data,\n        headers: {\n          'Content-Type': 'application/json',\n          'jwt-token': jwt\n        }\n      }\n      await axios.request(options)\n      message.success({ content: 'Cliente editado con exito' })\n      setLoading(false)\n      history.push(APP_PREFIX_PATH + '/customers')\n    } catch (error) {\n      setLoading(false)\n      console.error(error);\n    }\n  }\n\n  if (loading) return (\n    <Loading cover=\"content\" />\n  )\n\n  return (\n    <Card>\n      <Form {...layout} name=\"add-customer\" onFinish={onFinish} validateMessages={validateMessages} initialValues={{ ...customer }}>\n        <Form.Item name={['businessName']} label=\"Razon social\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name={['name']} label=\"Contacto\" >\n          <Input />\n        </Form.Item>\n        <Form.Item name={['email']} label=\"Correo\" rules={[{ type: 'email' }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name={['phone']} label=\"Telefono\" >\n          <InputNumber style={{ width: '200px' }} />\n        </Form.Item>\n        <Form.Item name={['webAddress']} label=\"Direccion web\" >\n          <Input />\n        </Form.Item>\n        <Form.Item name={['logo']} label=\"URL Logo\" >\n          <Input />\n        </Form.Item>\n        <Form.Item name={['address']} label=\"Ciudad\" >\n          <Input />\n        </Form.Item>\n        <Form.Item name={['nit']} label=\"NIT\" >\n          <Input style={{ width: '200px' }} />\n        </Form.Item>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Guardar\n          </Button>\n          <Button type=\"ghost\" onClick={() => history.push(APP_PREFIX_PATH + '/customers')} style={{ marginLeft: '15px' }}>\n            Volver\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  )\n}\n\nexport default EditCustomer\n"],"names":["layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","Object","filter","obj","predicate","keys","key","reduce","res","history","match","useState","customer","setCustomer","loading","setLoading","customerId","params","customerid","useEffect","init","jwt","localStorage","getItem","options","url","API_BASE_URL","method","headers","axios","data","console","log","onFinish","form","item","undefined","_id","message","content","push","APP_PREFIX_PATH","error","cover","name","initialValues","label","rules","type","style","width","offset","htmlType","onClick","marginLeft"],"sourceRoot":""}